<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Transactions</title>
  <!-- Bootstrap CSS -->
  <link 
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" 
    rel="stylesheet"
    integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" 
    crossorigin="anonymous"
  >
  <!-- DataTables core CSS -->
  <link 
    rel="stylesheet" 
    href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css"
  />
  <!-- Responsive extension CSS -->
  <link 
    rel="stylesheet" 
    href="https://cdn.datatables.net/responsive/2.4.1/css/responsive.bootstrap5.min.css"
  />
  <!-- Bootstrap Icons (WICHTIG, damit Icons angezeigt werden) -->
  <link 
    rel="stylesheet" 
    href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"
    crossorigin="anonymous"
  >
  <style>
    .amount {
      min-width: 120px;
      white-space: nowrap;
    }
    .description {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      /*max-width: 100px; /* Anpassen je nach Layout */
      /*display: inline-block;
      cursor: pointer; /* Zeigt an, dass man interagieren kann */
    }

    .description:hover {
        white-space: pre-line;
        max-width: none;
        position: absolute;
        background: white;
        border: 1px solid #ccc;
        padding: 5px;
        z-index: 100;
    }
  </style>
</head>

<body>
  <div class="container my-4">
    <h1 class="mb-4">Transactions</h1>

    {% if filter_info %}
      <p class="text-muted"><small>{{ filter_info }}</small></p>
    {% endif %}

    <div class="mb-3">
      <button id="resetFilters" class="btn btn-secondary btn-sm">
        <i class="bi bi-arrow-clockwise me-1"></i>Reset Filters
      </button>
    </div>

    <div class="table-responsive">
      {% set headers = transactions[0].getDictionary().keys() | list if transactions|length > 0 else [] %}
      <table 
        id="transactionsTable" 
        class="table table-striped table-hover table-responsive nowrap" 
        style="width: 100%"
      >
        <thead class="table-dark">
          <tr>
            {% for header in headers %}
              <th data-priority="{{ loop.index }}">
                {% if header in icon_map %}
                  <i class="{{ icon_map[header]|safe }}"></i>
                {% endif %}
                {% if header != "currency" %}
                  {{ header.replace('_', ' ') | title }}
                {% endif %}
              </th>
            {% endfor %}
          </tr>
        </thead>
        <tfoot>
          <tr>
            {% for header in headers %}
              <th>
                <input 
                  type="text" 
                  class="form-control form-control-sm" 
                  placeholder="Search {{ header | title }}"
                />
              </th>
            {% endfor %}
          </tr>
        </tfoot>
        <tbody>
          {% for transaction_object in transactions %}
            {% set row_dict = transaction_object.getDictionary() %}
            <tr class="{% if row_dict.value is none %}table-warning{% endif %}">
              {% for header in headers %}
                {% set cell_value = row_dict[header] %}
                {% if header == "value" %}
                  <td class="amount">
                    {% if cell_value is not none %}
                      {% if cell_value < 0 %}
                        <div class="d-flex justify-content-between">
                          <span class="text-danger">
                            <i class="bi bi-arrow-down-circle-fill"></i>
                          </span>
                          <span class="text-danger">
                            {{ "%.2f"|format(cell_value) }}
                          </span>
                        </div>
                      {% elif cell_value > 0 %}
                        <div class="d-flex justify-content-between">
                          <span class="text-success">
                            <i class="bi bi-arrow-up-circle-fill"></i>
                          </span>
                          <span class="text-success">
                            {{ "%.2f"|format(cell_value) }}
                          </span>
                        </div>
                      {% else %}
                        <div class="d-flex justify-content-between">
                          <span class="text-dark">
                            =
                          </span>
                          <span class="text-dark">
                            {{ "%.2f"|format(cell_value) }}
                          </span>
                        </div>
                      {% endif %}
                    {% else %}
                      <span class="text-danger">No Value defined!</span>
                    {% endif %}
                  </td>
                {% elif header == "source_document" %}
                  <td>
                    {% if cell_value %}
                      <a href="{{ cell_value }}">...{{ cell_value[-18:] }}</a>
                    {% else %}
                      <span class="text-danger">No Document</span>
                    {% endif %}
                  </td>
                {% elif header == "id" %}
                  <td>
                    {{ cell_value[-7:] }}
                  </td>
                {% elif header == "description" %}
                  <td class="description">
                    {{ cell_value }}
                  </td>
                {% else %}
                  <td>{{ cell_value }}</td>
                {% endif %}
              {% endfor %}
            </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
  </div>

  <footer class="text-center mt-4">
    <small>
      This project is licensed under the 
      <a href="https://opensource.org/licenses/MIT" target="_blank">MIT License</a> &mdash; 
      developed by 
      <a href="https://www.veen.world/" target="_blank">Kevin Veen-Birkenbach</a>. 
      View source on 
      <a href="https://github.com/kevinveenbirkenbach/financial-helper" target="_blank">GitHub</a>.
    </small>
  </footer>

  <!-- jQuery -->
  <script 
    src="https://code.jquery.com/jquery-3.6.0.min.js" 
    crossorigin="anonymous"
  ></script>

  <!-- DataTables core JS -->
  <script 
    src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"
  ></script>
  <script 
    src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"
  ></script>

  <!-- Responsive extension JS -->
  <script 
    src="https://cdn.datatables.net/responsive/2.4.1/js/dataTables.responsive.min.js"
  ></script>
  <script 
    src="https://cdn.datatables.net/responsive/2.4.1/js/responsive.bootstrap5.min.js"
  ></script>

  <script>
    $(document).ready(function() {
      document.querySelectorAll('.description').forEach(element => {
          let originalText = element.innerText.trim(); // Originaltext speichern
          let maxLength = 18; // Maximale Zeichenanzahl für gekürzte Ansicht

          // Prüfen, ob Kürzung notwendig ist
          if (originalText.length > maxLength) {
              let truncatedText = originalText.substring(0, maxLength) + '…'; // Nur wenn nötig `...` hinzufügen

              element.setAttribute('data-full-text', originalText); // Volltext speichern
              element.innerText = truncatedText; // Gekürzten Text anzeigen

              // Funktion für Zeilenumbrüche alle 18 Zeichen
              function insertLineBreaks(text, n) {
                  return text.replace(new RegExp(`(.{${n}})`, 'g'), '$1\n'); // Fügt Zeilenumbrüche ein
              }

              // Hover-Event nur hinzufügen, wenn gekürzt wurde
              element.addEventListener('mouseenter', function () {
                  let fullText = this.getAttribute('data-full-text'); 
                  this.innerText = insertLineBreaks(fullText, maxLength); // Zeilenumbrüche nach 18 Zeichen
                  this.style.whiteSpace = "pre-line"; // Macht Umbrüche sichtbar
              });

              element.addEventListener('mouseleave', function () {
                  this.innerText = truncatedText; // Gekürzten Text wiederherstellen
                  this.style.whiteSpace = "nowrap"; // Zeigt wieder als eine Zeile an
              });
          }
      });

      // Initialize DataTable with Responsive
      var table = $('#transactionsTable').DataTable({
        responsive: {
          details: {
            type: 'inline' 
          }
        },
        order: [[ 0, "desc" ]],
        pageLength: 25,
        lengthMenu: [
          [10, 25, 50, 100, -1], 
          [10, 25, 50, 100, "All"]
        ]
      });

      // Setup column-based searching from tfoot
      table.columns().every(function () {
        var column = this;
        $('input', column.footer()).on('keyup change clear', function () {
          if (column.search() !== this.value) {
            column.search(this.value).draw();
          }
        });
      });

      // Reset Filters button
      $('#resetFilters').on('click', function () {
        table.columns().search('').draw();
        $('#transactionsTable tfoot input').val('');
      });
    });
  </script>
</body>
</html>