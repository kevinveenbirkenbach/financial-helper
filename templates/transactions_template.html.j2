<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Transactions</title>
  <!-- Bootstrap CSS -->
  <link 
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" 
    rel="stylesheet"
    integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" 
    crossorigin="anonymous"
  >
  <!-- DataTables core CSS -->
  <link 
    rel="stylesheet" 
    href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css"
  />
  <!-- Responsive extension CSS -->
  <link 
    rel="stylesheet" 
    href="https://cdn.datatables.net/responsive/2.4.1/css/responsive.bootstrap5.min.css"
  />
  <!-- Bootstrap Icons (WICHTIG, damit Icons angezeigt werden) -->
  <link 
    rel="stylesheet" 
    href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"
    crossorigin="anonymous"
  >
  <style>
    .amount {
      min-width: 120px;
      white-space: nowrap;
    }
    .description {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      cursor: pointer;
    }

    .description:hover {
        white-space: pre-line;
        max-width: none;
        position: absolute;
        background: white;
        border: 1px solid #ccc;
        padding: 5px;
        z-index: 100;
    }

    .full-view .container {
    width: 100% !important;
    max-width: 100% !important;
    }

    .full-view .table-responsive {
        overflow-x: visible;
    }

    .full-view #transactionsTable {
        width: 100% !important;
    }

  </style>
</head>

<body>
  <main class="container my-4">
    <h1 class="mb-4">Transactions</h1>

    {% if filter_info %}
      <p class="text-muted"><small>{{ filter_info }}</small></p>
    {% endif %}

    <div class="table-responsive">
      {% set headers = transactions[0].getDictionary().keys() | list if transactions|length > 0 else [] %}
      <table 
        id="transactionsTable" 
        class="table table-striped table-hover table-responsive nowrap" 
        style="width: 100%"
      >
        <thead class="table-dark">
          <tr>
            {% for header in headers %}
              <th data-priority="{{ loop.index }}">
                {% if header in icon_map %}
                  <i class="{{ icon_map[header]|safe }}"></i>
                {% endif %}
                {% if header != "currency" %}
                  {{ header.replace('_', ' ') | title }}
                {% endif %}
              </th>
            {% endfor %}
          </tr>
        </thead>
        <tfoot>
          <tr>
            {% for header in headers %}
              <th>
                <input 
                  type="text" 
                  class="form-control form-control-sm" 
                  placeholder="Search {{ header | title }}"
                />
              </th>
            {% endfor %}
          </tr>
        </tfoot>
        <tbody>
          {% for transaction_object in transactions %}
            {% set row_dict = transaction_object.getDictionary() %}
            <tr class="{% if row_dict.value is none %}table-warning{% endif %}">
              {% for header in headers %}
                {% set cell_value = row_dict[header] %}
                {% if header == "value" %}
                  <td class="amount">
                    {% if cell_value is not none %}
                      {% if cell_value < 0 %}
                        <div class="d-flex justify-content-between">
                          <span class="text-danger">
                            <i class="bi bi-arrow-down-circle-fill"></i>
                          </span>
                          <span class="text-danger">
                            {{ "%.2f"|format(cell_value) }}
                          </span>
                        </div>
                      {% elif cell_value > 0 %}
                        <div class="d-flex justify-content-between">
                          <span class="text-success">
                            <i class="bi bi-arrow-up-circle-fill"></i>
                          </span>
                          <span class="text-success">
                            {{ "%.2f"|format(cell_value) }}
                          </span>
                        </div>
                      {% else %}
                        <div class="d-flex justify-content-between">
                          <span class="text-dark">
                            =
                          </span>
                          <span class="text-dark">
                            {{ "%.2f"|format(cell_value) }}
                          </span>
                        </div>
                      {% endif %}
                    {% else %}
                      <span class="text-danger">No Value defined!</span>
                    {% endif %}
                  </td>
                {% elif header == "source" %}
                  <td class="{{header}}">
                    {% if cell_value %}
                      <a href="{{ cell_value }}">{{ cell_value }}</a>
                    {% else %}
                      <span class="text-danger">No Document</span>
                    {% endif %}
                  </td>
                {% else %}
                  <td class="{{header}}">{{ cell_value }}</td>
                {% endif %}
              {% endfor %}
            </tr>
          {% endfor %}
        </tbody>
      </table>
        </div>
      <div class="mb-3">
      <button id="resetFilters" class="btn btn-secondary btn-sm">
        <i class="bi bi-arrow-clockwise me-1"></i>Reset Filters
      </button>
      <button id="toggleFullView" class="btn btn-primary btn-sm">
        <i class="bi bi-arrows-fullscreen me-1"></i> Toggle Full View
      </button>
    </div>
    </main>
  <footer class="text-center mt-4">
    <small>
      This project is licensed under the 
      <a href="https://opensource.org/licenses/MIT" target="_blank">MIT License</a> &mdash; 
      developed by 
      <a href="https://www.veen.world/" target="_blank">Kevin Veen-Birkenbach</a>. 
      View source on 
      <a href="https://github.com/kevinveenbirkenbach/financial-helper" target="_blank">GitHub</a>.
    </small>
  </footer>

  <!-- jQuery -->
  <script 
    src="https://code.jquery.com/jquery-3.6.0.min.js" 
    crossorigin="anonymous"
  ></script>

  <!-- DataTables core JS -->
  <script 
    src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"
  ></script>
  <script 
    src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"
  ></script>

  <!-- Responsive extension JS -->
  <script 
    src="https://cdn.datatables.net/responsive/2.4.1/js/dataTables.responsive.min.js"
  ></script>
  <script 
    src="https://cdn.datatables.net/responsive/2.4.1/js/responsive.bootstrap5.min.js"
  ></script>

  <script>
$(document).ready(function () {
    console.log("Initializing script...");

    /**
     * Function to apply text truncation while preserving full text for search.
     * Ensures that hovering over the element reveals the full text with line breaks.
     * @param {string} selector - The CSS selector for the elements to truncate.
     * @param {number} maxLength - The max length of visible text.
     * @param {boolean} cutFromEnd - If true, truncates from the end, otherwise from the beginning.
     */
    function applyTextShortening(selector, maxLength, cutFromEnd = false) {
        $(selector).each(function () {
            let element = $(this);
            let link = element.find("a"); // Check if the element contains a link
            let originalText;
            let truncatedText;

            if (link.length > 0) {
                originalText = link.text().trim();
            } else {
                originalText = element.text().trim();
            }

            console.log(`Processing ${selector}:`, originalText);

            if (originalText.length > maxLength) {
                truncatedText = cutFromEnd
                    ? "…" + originalText.slice(-maxLength)
                    : originalText.substring(0, maxLength) + "…";

                element.attr("data-search", originalText);
                console.log("Set data-search:", originalText);

                if (link.length > 0) {
                    link.text(truncatedText);
                } else {
                    element.html(`<span class="truncated-text">${truncatedText}</span>`);
                }

                function formatWithLineBreaks(text, length) {
                    return text.replace(new RegExp(`(.{${length}})`, "g"), "$1\n");
                }

                element.hover(
                    function () {
                        let expandedText = formatWithLineBreaks(originalText, maxLength);

                        if (link.length > 0) {
                            link.text(expandedText);
                        } else {
                            $(this).html(`<span class="full-text">${expandedText}</span>`);
                        }

                        $(this).css("white-space", "pre-line"); // Make line breaks visible
                    },
                    function () {
                        if (link.length > 0) {
                            link.text(truncatedText);
                        } else {
                            $(this).html(`<span class="truncated-text">${truncatedText}</span>`);
                        }

                        $(this).css("white-space", "nowrap");
                    }
                );
            }
        });
    }

    function initializeDataTable(isFullView) {
        console.log("Initializing DataTable, fullView:", isFullView);

        if ($.fn.DataTable.isDataTable("#transactionsTable")) {
            console.log("Destroying existing DataTable instance...");
            $("#transactionsTable").DataTable().destroy();
        }

        let table = $("#transactionsTable").DataTable({
            responsive: !isFullView,
            scrollX: isFullView,
            order: [[1, "asc"]], // Sorting by the 2nd column in ascending order
            pageLength: 25,
            lengthMenu: [
                [10, 25, 50, 100, -1],
                [10, 25, 50, 100, "All"]
            ]
        });

        console.log("DataTable initialized.");

        $("#transactionsTable tfoot input").on("keyup change", function () {
            let colIndex = $(this).parent().index();
            let searchTerm = $(this).val().toLowerCase();

            console.log(`Filtering column ${colIndex} with term: ${searchTerm}`);

            table.column(colIndex).search(searchTerm, false, false).draw();
        });

        $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
            let searchInput = $("#transactionsTable_filter input").val().toLowerCase();
            let row = $("#transactionsTable tbody tr").eq(dataIndex);
            let match = false;

            console.log("Global search input:", searchInput);

            row.find("td").each(function () {
                let searchValue = $(this).attr("data-search") || $(this).text();
                console.log("Checking row value:", searchValue);

                if (searchValue.toLowerCase().includes(searchInput)) {
                    console.log("Match found!");
                    match = true;
                    return false;
                }
            });

            return match;
        });

        $("#transactionsTable_filter input").off("keyup change").on("keyup change", function () {
            console.log("Search updated, redrawing table...");
            table.draw();
        });
    }

    console.log("Applying text shortening...");
    applyTextShortening(".description", 36);
    applyTextShortening(".id", 8, true);
    applyTextShortening(".source", 20, true);

    initializeDataTable(false);

    $("#resetFilters").on("click", function () {
        console.log("Resetting filters...");
        $("#transactionsTable").DataTable().search("").columns().search("").draw();
        $("#transactionsTable tfoot input").val("");
    });

    $("#toggleFullView").on("click", function () {
        $("body").toggleClass("full-view");
        let isFullView = $("body").hasClass("full-view");
        console.log("Toggling Full View:", isFullView);
        initializeDataTable(isFullView);
    });

    console.log("DataTable active:", $.fn.DataTable.isDataTable("#transactionsTable"));
});


  </script>
</body>
</html>